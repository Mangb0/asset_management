{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-231b6d44\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"asset\"\n};\nconst _hoisted_2 = {\n  class: \"act\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.add())\n  }, \"+ 추가\"), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.pagelink())\n  }, \"+ 이동\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.state.data, d => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: d.changeno,\n      onClick: $event => $setup.edit(d.changeno)\n    }, _toDisplayString(d.money), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAK;;;uBADpBC,oBASM,OATNC,UASM,GARFC,oBAIM,OAJNC,UAIM,GAHFD,oBAA4D;IAApDH,KAAK,EAAC,iBAAiB;IAAEK,OAAK,sCAAEC,UAAG;KAAI,MAAI,GACnDH,oBAAiE;IAAzDH,KAAK,EAAC,iBAAiB;IAAEK,OAAK,sCAAEC,eAAQ;KAAI,MAAI,KAG5DH,oBAEK,gCADDF,oBAA0FM,6BAA1ED,YAAK,CAACE,IAAI,EAAfC,CAAC;yBAAZR,oBAA0F;MAA7DS,GAAG,EAAED,CAAC,CAACE,QAAQ;MAAGN,OAAK,YAAEC,WAAI,CAACG,CAAC,CAACE,QAAQ;wBAAMF,CAAC,CAACG,KAAK","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","$setup","_Fragment","data","d","key","changeno","money"],"sourceRoot":"","sources":["C:\\Users\\whdud\\Project\\Web\\asset\\fe\\src\\view\\AssetView.vue"],"sourcesContent":["<template>\r\n    <div class=\"asset\">\r\n        <div class=\"act\">\r\n            <button class=\"btn btn-primary\" @click=\"add()\">+ 추가</button>\r\n            <button class=\"btn btn-primary\" @click=\"pagelink()\">+ 이동</button>\r\n\r\n        </div>\r\n        <ul>\r\n            <li v-for=\"d in state.data\" :key=\"d.changeno\" @click=\"edit(d.changeno)\">{{ d.money }}</li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive } from \"vue\";\r\nimport axios from \"axios\";\r\nexport default {\r\n    setup() {\r\n        const state = reactive({\r\n            data: []\r\n        });\r\n\r\n        const pagelink = () => {\r\n            this.$router.push('/login');\r\n        }\r\n\r\n        const add = () => {\r\n            const content = prompt(\"내용을 입력해주세요.\");\r\n            if(!content) {\r\n                alert(\"내용을 입력해주세요.\");\r\n                return add();\r\n            }\r\n            axios.post(\"/api/assets\", { content }).then((res) => {\r\n                state.data = res.data;\r\n            });\r\n        };\r\n\r\n        const edit = (changeno) => {\r\n            const content = prompt(\"내용을 입력해주세요\", state.data.find(d=>d.changeno === changeno).money);\r\n            axios.put(\"/api/assets/\" + changeno, { content }).then((res) => {\r\n                state.data = res.data;\r\n            });\r\n        };\r\n\r\n        axios.get(\"/api/assets\").then((res) => {\r\n            state.data = res.data;\r\n        });\r\n\r\n        return { state, add, edit, pagelink };\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.asset {\r\n    .act{\r\n        text-align: right;\r\n        padding: 10px 5px 5px 5px;\r\n    }\r\n    ul {\r\n        border-top: 1px solid #eee;\r\n        list-style: none;\r\n        padding: 15px 0;\r\n        margin: 0;\r\n        li {\r\n            padding: 15px;\r\n            margin: 5px;\r\n            border: 1px solid #eee;\r\n        }\r\n    }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}